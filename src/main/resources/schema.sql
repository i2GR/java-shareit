DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS items CASCADE;
DROP TABLE IF EXISTS bookings CASCADE;
DROP TABLE IF EXISTS requests CASCADE;
DROP TABLE IF EXISTS item_requests CASCADE;

CREATE TABLE users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email varchar(64) NOT NULL,
    name varchar(32) NOT NULL,
  CONSTRAINT usr_email_unq UNIQUE (email)
);

CREATE TABLE items (
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    owner_id BIGINT,
    name varchar(128) NOT NULL,
    description varchar(2048) NOT NULL,
    available BOOLEAN DEFAULT TRUE,
    request_id BIGINT,
  CONSTRAINT fk_items_to_users FOREIGN KEY(owner_id) REFERENCES users(id)
);

CREATE TABLE bookings (
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    start_date TIMESTAMP (3) WITHOUT TIME ZONE,
    end_date TIMESTAMP (3) WITHOUT TIME ZONE,
    item_id BIGINT NOT NULL,
    booker_id BIGINT NOT NULL,
    status varchar(16) NOT NULL,
  CONSTRAINT fk_bookings_to_items FOREIGN KEY(item_id) REFERENCES items(id),
  CONSTRAINT fk_bookings_to_users FOREIGN KEY(booker_id) REFERENCES users(id),
  CONSTRAINT booking_start_end CHECK (start_date < end_date)
);

CREATE TABLE comments (
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    item_id BIGINT NOT NULL,
    author_id BIGINT NOT NULL,
    text varchar(1024) NOT NULL,
    created TIMESTAMP (3) WITHOUT TIME ZONE,
  CONSTRAINT fk_comments_to_items FOREIGN KEY(item_id) REFERENCES items(id),
  CONSTRAINT fk_comments_to_users FOREIGN KEY(author_id) REFERENCES users(id)
);

CREATE TABLE requests (
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    description varchar(2048) NOT NULL,
    requester_id BIGINT NOT NULL,
    created TIMESTAMP (3) WITHOUT TIME ZONE,
  CONSTRAINT fk_requests_to_users FOREIGN KEY(requester_id) REFERENCES users(id)
);

CREATE TABLE item_requests (
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    request_id BIGINT NOT NULL,
    item_id BIGINT NOT NULL,
  CONSTRAINT fk_ir_to_requests FOREIGN KEY(request_id) REFERENCES requests(id),
  CONSTRAINT fk_ir_to_items FOREIGN KEY(item_id) REFERENCES items(id)
);